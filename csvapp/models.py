from django.db import models

# Create your models here.
class FuneralPolicy(models.Model):

    gender_choices = [
        ('male', 'Male'),
        ('female', 'Female'),
    ]

    policy_search = models.IntegerField()
    ID_search = models.IntegerField(unique=True)
    time_stamp = models.DateField()
    report_period_start = models.DateTimeField()
    report_period_end = models.DateTimeField()
    administrator = models.CharField(max_length=100)  # Corrected typo here
    insurer_name = models.CharField(max_length=200)
    client_identifier = models.IntegerField()
    division_identifier = models.IntegerField()
    sub_scheme_name = models.CharField(max_length=200)
    policy_number = models.CharField(max_length=200)
    product_name = models.CharField(max_length=200)
    product_option = models.IntegerField()
    policy_commencement_date = models.DateField()
    policy_expiry_date = models.DateField()
    term_of_policy = models.IntegerField()
    policy_status = models.CharField(max_length=200)
    policy_status_date = models.DateField()
    new_policy_indicator = models.IntegerField()
    sales_channel = models.CharField(max_length=200)
    cancelled_by = models.IntegerField()
    death_indicator = models.CharField(max_length=200)
    premium_frequency = models.IntegerField()
    premium_type = models.CharField(max_length=200)
    death_original_sum_insured = models.FloatField()
    death_cover = models.CharField(max_length=200)
    death_current_sum_insured = models.FloatField()
    reinsurer_name = models.CharField(max_length=200)
    death_current_ri_sum_insured = models.FloatField()
    death_ri_premium = models.FloatField()
    death_ri_percent = models.FloatField()
    total_premium_collected = models.IntegerField()
    total_premium_payable = models.FloatField()
    total_premium_subsidy = models.FloatField()
    total_reinsurance_premium = models.FloatField()
    total_reinsurance_premium_payable = models.FloatField()
    total_financial_reinsurance_cashflows = models.FloatField()
    total_financial_reinsurance_payable = models.FloatField()
    commission_frequency = models.IntegerField()
    commission = models.FloatField()
    binder_fees = models.FloatField()
    outsourcing_fees = models.FloatField()
    marketing_fees = models.FloatField()
    management_fees = models.FloatField()
    claims_handling_fees = models.FloatField()
    total_gross_claim_amount = models.FloatField()
    gross_claim_paid = models.FloatField()
    reinsurance_recoveries = models.IntegerField()
    principal_surname = models.CharField(max_length=200)
    principal_firstname = models.CharField(max_length=200)
    principal_initials = models.CharField(max_length=200)
    principal_id = models.BigIntegerField(unique=True)
    principal_gender = models.CharField(max_length=200, choices=gender_choices)
    principal_date_of_birth = models.DateField()
    principal_physical_address = models.CharField(max_length=255)
    principal_postal_code = models.IntegerField()
    principal_email = models.EmailField()
    income_group = models.IntegerField()
    spouse_indicator = models.CharField(max_length=200)
    number_adult_dependants = models.IntegerField()
    number_child_dependants = models.IntegerField()
    number_extended_family = models.IntegerField()
    spouse_surname = models.CharField(max_length=200)
    spouse_firstname = models.CharField(max_length=200)
    spouse_initials = models.CharField(max_length=200)
    spouse_id = models.IntegerField(unique=True)

    spouse_gender = models.CharField(max_length=10, choices=gender_choices)

    spouse_date_of_birth = models.DateField()
    spouse_cover_amount = models.FloatField()
    spouse_cover_commencement_date = models.DateField()

    dependent_1_gender = models.CharField(max_length=10, choices=gender_choices)
    dependent_1_date_of_birth = models.DateField()
    dependent_1_type = models.CharField(max_length=200)
    dependent_1_cover_amount = models.IntegerField()
    dependent_1_cover_commencement_date = models.DateTimeField()

    dependent_2_gender = models.CharField(max_length=10, choices=gender_choices)
    dependent_2_date_of_birth = models.DateField()
    dependent_2_type = models.CharField(max_length=200)
    dependent_2_cover_amount = models.IntegerField()
    dependent_2_cover_commencement_date = models.DateTimeField()

    dependent_3_gender = models.CharField(max_length=10, choices=gender_choices)
    dependent_3_date_of_birth = models.DateField()
    dependent_3_type = models.CharField(max_length=200)
    dependent_3_cover_amount = models.IntegerField()
    dependent_3_cover_commencement_date = models.DateTimeField()

    dependent_4_gender = models.CharField(max_length=10, choices=gender_choices)
    dependent_4_date_of_birth = models.DateField()
    dependent_4_type = models.CharField(max_length=200)
    dependent_4_cover_amount = models.IntegerField()
    dependent_4_cover_commencement_date = models.DateTimeField()

    dependent_5_gender = models.CharField(max_length=10, choices=gender_choices)
    dependent_5_date_of_birth = models.DateField()
    dependent_5_type = models.CharField(max_length=200)
    dependent_5_cover_amount = models.IntegerField()
    dependent_5_cover_commencement_date = models.DateTimeField()

    dependent_6_gender = models.CharField(max_length=10, choices=gender_choices)
    dependent_6_date_of_birth = models.DateField()
    dependent_6_type = models.CharField(max_length=200)
    dependent_6_cover_amount = models.IntegerField()
    dependent_6_cover_commencement_date = models.DateTimeField()

    dependent_7_gender = models.CharField(max_length=10, choices=gender_choices)
    dependent_7_date_of_birth = models.DateField()
    dependent_7_type = models.CharField(max_length=200)
    dependent_7_cover_amount = models.IntegerField()
    dependent_7_cover_commencement_date = models.DateTimeField()

    dependent_8_gender = models.CharField(max_length=10, choices=gender_choices)
    dependent_8_date_of_birth = models.DateField()
    dependent_8_type = models.CharField(max_length=200)
    dependent_8_cover_amount = models.IntegerField()
    dependent_8_cover_commencement_date = models.DateTimeField()

    dependent_9_gender = models.CharField(max_length=10, choices=gender_choices)
    dependent_9_date_of_birth = models.DateField()
    dependent_9_type = models.CharField(max_length=200)
    dependent_9_cover_amount = models.IntegerField()
    dependent_9_cover_commencement_date = models.DateTimeField()

    dpip = models.CharField(max_length=200)
    reference_number = models.IntegerField(unique=True)
    policy_start_date = models.DateField()

    def __str__(self):
        return f"{self.policy_number} - {self.insurer_name} - {self.policy_start_date}"

